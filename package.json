{
  "name": "sam-test",
  "version": "1.0.0",
  "description": "SAM-Test",
  "private": true,
  "engines": {
    "node": ">=14.x"
  },
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.0.3",
    "@stdlib/constants-time": "^0.0.6",
    "async": "^3.2.0",
    "axios": "^0.21.1",
    "axios-concurrency": "^1.0.4",
    "bluebird": "^3.7.2",
    "cfonts": "^2.9.3",
    "chance": "^1.1.7",
    "csv-stringify": "^5.6.2",
    "dotenv": "^10.0.0",
    "ejson": "^2.2.1",
    "entities": "^2.2.0",
    "fast-csv": "^4.3.6",
    "figlet": "^1.5.0",
    "fp-ts": "^2.10.5",
    "io-ts": "^2.2.16",
    "io-ts-extra": "^0.11.4",
    "io-ts-types": "^0.5.16",
    "json2csv": "^5.0.6",
    "monocle-ts": "^2.3.10",
    "newtype-ts": "^0.3.4",
    "nodemailer": "^6.7.2",
    "openapi-types": "^9.3.0",
    "scramjet": "^4.35.21",
    "source-map-support": "^0.5.19",
    "splunk-logging": "^0.11.1",
    "uuid": "^8.3.2",
    "valid-url": "^1.0.9",
    "z-schema": "^4.2.4"
  },
  "devDependencies": {
    "@fast-csv/format": "^4.3.5",
    "@musement/types-generator": "0.0.11",
    "@tsconfig/node14": "^1.0.1",
    "@types/async": "^3.2.6",
    "@types/aws-lambda": "^8.10.72",
    "@types/bluebird": "^3.5.36",
    "@types/chance": "^1.1.2",
    "@types/ejson": "^2.1.2",
    "@types/faker": "^5.5.8",
    "@types/figlet": "^1.5.4",
    "@types/jest": "^26.0.20",
    "@types/json2csv": "^5.0.3",
    "@types/minimist": "^1.2.1",
    "@types/node": "^14.14.26",
    "@types/nodemailer": "^6.4.4",
    "@types/splunk-logging": "^0.9.2",
    "@types/uuid": "^8.3.0",
    "@types/valid-url": "^1.0.3",
    "@typescript-eslint/eslint-plugin": "^4.25.0",
    "@typescript-eslint/parser": "^4.25.0",
    "aws-sdk": "^2.916.0",
    "eslint": "^7.27.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.23.3",
    "eslint-plugin-jsdoc": "^35.0.0",
    "eslint-plugin-prettier": "^3.4.0",
    "faker": "^5.5.3",
    "faker-extra": "^1.4.2",
    "husky": "^6.0.0",
    "jest": "^26.6.3",
    "minimist": "^1.2.5",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.3.0",
    "ts-jest": "^26.5.1",
    "ts-node": "^9.0.0",
    "typescript": "^4.3.4"
  },
  "scripts": {
    "setup": "npm i && npm-run-all genAllApiFolders genAllApi",
    "build": "./node_modules/typescript/bin/tsc",
    "watch": "./node_modules/typescript/bin/tsc --watch --preserveWatchOutput",
    "start": "sam local start-api",
    "warmStart": "sam local start-api --warm-containers LAZY",
    "debug": "sam local start-api --debug-port 5858",
    "prune": "npm prune --production",
    "deploy": "sam build --parallel && sam deploy",
    "postdeploy": "npm install",
    "sam-build": "sam build",
    "sam-deploy": "sam deploy --config-file $SAM_CONFIG --no-fail-on-empty-changeset --no-confirm-changeset",
    "sam-deploy-dry": "sam deploy --no-execute-changeset --config-file $SAM_CONFIG --no-fail-on-empty-changeset --no-confirm-changeset",
    "genAllApi": "npm-run-all --parallel genPLApi genMLApi genWorkbenchApi genWorkbenchInipPickerApi",
    "genAllApiFolders": "mkdir -p ./src/lib/api-productlake && mkdir -p ./src/lib/api-medialake && mkdir -p ./src/tables/workbench",
    "genPLApi": "npx @musement/types-generator --type CodecIoTs --source ./submodules/by-pl-api/api/api-productlake-core.json --destination ./src/lib/api-productlake/index.ts",
    "genMLApi": "npx @musement/types-generator --type CodecIoTs --source ./submodules/by-pl-api/api/api-productlake-media.json --destination ./src/lib/api-medialake/index.ts",
    "genWorkbenchApi": "npx @musement/types-generator --type CodecIoTs --source ./api/workbench.yml --destination ./src/tables/workbench/assignments.ts",
    "genWorkbenchInipPickerApi": "npx @musement/types-generator --type CodecIoTs --source ./api/workbenchInipPicker.yml --destination ./src/tables/workbench/inipPickerWorkbench.ts",
    "lint": "npx eslint ./src/**/*.ts ./__tests__/**/*.ts",
    "lint-ci": "npx eslint -f json -o ./eslint-report.json ./src/**/*.ts ./__tests__/**/*.ts",
    "test": "StackName=INIP-TEST jest",
    "testwithlog": "StackName=INIP-TEST node --expose-gc --inspect-brk ./node_modules/.bin/jest --runInBand --logHeapUsage",
    "test-win": "jest",
    "ts-node": "ts-node",
    "setupdb": "./localdb/setupdb.sh",
    "initdb": "StackName=INIP-TEST ts-node ./localdb/initDb.ts"
  }
}
